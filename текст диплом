ВСТУП


З розвитком ІТ-технологій інтернет-магазини стали надзвичайно популярними. Вони пропонують безліч переваг для споживачів: низькі та прозорі ціни, широкий вибір товарів і послуг, а також зручність покупок. На відміну від традиційного шопінгу, покупці інтернет-магазинів уникають таких незручностей, як натовпи людей, довгі черги біля каси чи труднощі з паркуванням в переповнених торгових центрах.
Доходи від електронної комерції стрімко зростають, і дедалі більше людей надають перевагу онлайн-шопінгу. Така динаміка сприяє тому, що щороку ринок Інтернету поповнюється новими гравцями, як серед приватних осіб, так і серед роздрібних компаній. Інтернет-магазини приваблюють своєю економічністю: відсутність витрат на оренду приміщень чи їх облаштування стає вагомою перевагою. 
Створення власного інтернет-магазину в умовах конкуренції із великими гравцями, такими як Amazon чи eBay, є викликом. Однак, використовуючи креативні ідеї, унікальну товарну пропозицію та глибоке розуміння потреб клієнтів, навіть невеликі проєкти можуть досягти успіху. Важливим фактором стає інноваційність, увага до деталей і здатність виявляти власну нішу на насиченому ринку.
Окрім цього, необхідно зазначити, що основна підготовка та правильна стратегія є ключем до ефективного запуску проєкту. До основних етапів належать детальне дослідження ринку, створення якісної платформи, налаштування зручної логістики та організація клієнтського сервісу. За умови такого підходу електронна комерція здатна стати не лише перспективним, але й стабільним джерелом доходу.
Для кожної компанії створення інтернет-магазину – це перевага, оскільки за досить короткий термін клієнтська база збільшиться в рази, і це найефективніша реклама, таким чином, будуть заощаджені кошти.
Власний сайт дозволяє отримувати додатковий прибуток шляхом розміщення на своїх сторінках реклами інших компаній.
Розробка електронного магазину та його використання є актуальним питанням на сьогоднішній день, оскільки мільйони людей щодня, не виходячи з дому, купують різні товари в електронних магазинах. 
В світі, а зокрема в Україні, величезними темпами росте кількість користувачів Інтернету і, як наслідок, кількість онлайн покупців. 
1 ХАРАКТЕРИСТИКА ОБ’ЄКТА ПРОЄКТУВАННЯ


1.1 Визначення та види інтернет-магазинів

Термін «інтернет-магазин» –  це магазин послуг або товарів у глобальній мережі інтернет. IT-магазини це вебресурси, призначені для реалізації різних цілей, як-от продаж товарів і послуг, взаємодія з клієнтами чи просування бренду. Різноманіття форматів та структур дозволяє адаптувати сайти під конкретні завдання та потреби бізнесу.
Основні переваги інтернет-магазинів:
●	зручність, покупки можна робити в будь-який час і з будь-якого місця;
●	широкий вибір товарів ніж у звичайних магазинах;
●	економія грошей, немає потреби витрачати час на поїздку до магазину, а також є можливість знайти кращу ціну;
●	товари можуть бути доставлені прямо додому або в пункт видачі;
●	відгуки та рейтинги допомагають прийняти рішення перед покупкою.
Також інтернет-магазини вигідні для продавців, знижують витрати на оренду приміщень і можуть залучати клієнтів з різних регіонів.
Класифікація сайтів, які використовують є-комерцію:
●	сайти послуг;
●	корпоративні портали;
●	сайти-візитки;
●	лендинги;
●	інтернет-магазини;
●	сайти-каталоги;
●	інформаційні сайти;
●	форуми та спільноти.
Сайти послуг – це вебресурс, що створений для надання певних видів послуг. Його пропонує компанія або спеціаліст, який надає опис послуг та контактну інформацію. Прикладом такого сайту може слугувати широко відомий ресурс Olx.ua, який показано на рис. 1.1.

 

Рисунок 1.1 – Сайт послуг OLX.ua
(https://www.olx.ua/uk/)

Корпоративні портали-ресурси, які обслуговують великі компанії, забезпечуючи організацію та автоматизацію процесів, включають розширені модулі, CRM-системи, документообіг, інтранет. Приклад корпоративного порталу smart-it поданий на рис. 1.2.

 

Рисунок 1.2 – Корпоративний портал 
(https://intranet.smart-it.com/)
Сайти-візитки – це вебресурс, який є «лицем» компанії або підприємця, де представлена основна інформація. Сайт-візитка LIBER, поданий на рис. 1.3.

 

Рисунок 1.3 – Сайт візитка LIBER
(https://hostiq.ua/blog/ukr/business-website/)

Сайт-візитка mate.academy поданий на рис. 1.4, представлений, як односторінковий сайт розроблений з метою, привернення уваги клієнтів або користувачів і спонукає їх виконати певну дію, наприклад зробити покупку або заповнити форму. 

 

Рисунок 1.4 – Односторінковий сайт  mate.academy
(https://mate.academy/)
Сайти-каталоги – це вебресурси, які організовано відображають великий обсяг товарів, послуг або інформації та використовуються, як довідкові платформи для допомоги клієнтам у виборі та порівнянні товарів чи послуг, приклад поданий на рис. 1.5.

 

Рисунок 1.5 – Сайт-каталог  ek.ua
(https://ek.ua/ua/)

Інформаційні сайти  –  це вебплатформи, створені для надання корисної, освітньої чи новинної інформації, вони охоплюють різні теми, від новин та науки до інструкцій і навчальних матеріалів. Приклад поданий на рис. 1.6.

 

Рисунок 1.6 – Інформаційний сайт sinoptik.ua
(https://sinoptik.ua/)
Форуми та спільноти – онлайн портали, де  користувачі з подібними інтересами або потребами можуть спілкуватися та обмінюватись досвідом, а також задавати питання та обговорювати різні теми, як зображено на рис. 1.7.

  

Рисунок 1.7 – Форум 4pda.to
(https://4pda.to/)

Вище зазначені  різновиди вебресурсів дозволяють реалізувати різні бізнес-ідеї, забезпечуючи сучасним компаніям гнучкість та ефективність в онлайн-просторі. Також інтернет-магазини поділяються  за  бізнес моделями. 
Існують три найпоширеніших способи ведення бізнесу [1]:
●	B2C (від бізнесу до споживача), який передбачає, що процес інтернет-магазину відбувається між покупцем і підприємцем, тобто виробником або постачальник послуг;
●	B2B (від бізнесу до бізнесу), в якому процес онлайн-торгівлі відбувається між двома підприємцями;
●	B2B2C розроблений, як комбінація цих двох методів онлайн-торгівлі, що означає «бізнес до бізнесу клієнтам».
Окрім вищезгаданих типів інтернет-магазинів, існують також наступні моделі:
●	C2B від англійських термінів «споживач до бізнесу», в рамках якого онлайн-торгівлю веде покупець, який запитує конкретну послугу або товар у продавця, заявляючи про власні запити (наприклад, бюджет, який він має на покупку певного продукту чи послуги);
●	C2C (споживач для споживача), який є онлайн- магазином, схожим на аукціон, що відбувається між двома користувачами;
●	B2A від англійських слів «business до Administration», чий основний сегмент бізнесу це виконання фінансових операцій між підприємцями, тобто компаніями та численними державними установами;
●	C2A від англійських слів «споживач до адміністрації», що стосується всіх необхідних транзакцій, які особа здійснює щодо різних державних органів;
●	B2E (бізнес для працівника), призначений в першу чергу для співробітників в рамках певної компанії і P2P (peer to peer).
Хоча більшість таких видів інтернет-магазинів не мають широкого поширення, впровадження згаданих моделей суттєво впливає на полегшення ведення бізнесу, як окремих осіб, так і цілих організацій та органів державної влади.
У більшості інтернет-магазинів  здійснюється оплата за допомогою будь-яких платіжних карток, що є особливо зручним для платформ, орієнтованих на внутрішній ринок. Водночас для користування послугами глобальних лідерів електронної комерції, таких як Amazon чи eBay, може знадобитися спеціалізована картка для онлайн-платежів, що створює певні труднощі для вітчизняних користувачів.
Попри популярність інтернет-магазинів як зручного способу придбання товарів і послуг, питання безпеки залишаються актуальними. Оскільки Інтернет відкритий для всіх, існує ризик несанкціонованого використання особистих даних. Для зниження таких ризиків інтернет-магазини мають впроваджувати спеціальні програми захисту, які забезпечують конфіденційність даних, запобігають їхньому несанкціонованому зміненню та перевіряють автентичність користувачів. Також значна частина платформ використовує сучасні методи шифрування для забезпечення надійності й підвищення довіри користувачів.
 
1.2 Концепція інтернет-магазину

Найважливіші кроки при створенні концепції онлайн-бізнесу:
●	визначення асортименту товарів, який підходить для	онлайн-продажів;
●	аналіз цільової групи, ринку та потенційної конкуренції;
●	аналіз системи магазинів в тій області, в якій планується створення інтернет-магазину;
●	визначення основних функції інтернет-магазину (наприклад, доставка, оплата, навігація).
●	переконатися, що дизайн вашого вебмагазину відповідає законодавству з самого початку.
На початку проєктування потрібно проаналізувати свою відправну точку та визначити стратегію для початкового етапу планування інтернет-магазину, після цього працюють над аспектами проєкту електронної комерції, дизайном та зручність використання та маркетингу.
Для будь-якого роздрібного продавця головним є надати покупцям ексклюзивний асортимент товарів. 
Для досягнення цілей потрібно, щоб продукти, які ще не отримали широкого розповсюдження в онлайн-комерції, або ті, які користуються надзвичайно великим попитом, мають значний потенціал. Тому перед початком діяльності важливо ретельно визначити асортимент. Виходити на ринок електронної комерції без чіткого уявлення про асортимент продукції для продажу не рекомендується.
Для успішного аналізу цільової аудиторії важливо чітко розуміти, що означає цей термін. 
Цільова аудиторія – це група осіб, що володіє певними спільними характеристиками, які вказують на їхню зацікавленість у продуктах чи послугах магазину. Завдяки такому аналізу можна не лише оцінити наявність ринку для запланованих товарів серед активних користувачів інтернету (наприклад, люди похилого віку рідко купують онлайн), але й визначити найоптимальніший спосіб побудови структури інтернет-магазину. 
Молода аудиторія віддає перевагу сучасному дизайну із яскравими кольорами та невимушеною мовою, тоді як дорослі – більш консервативному, зрозумілому та авторитетному стилю. Занадто легковажний чи «молодий» дизайн може викликати недовіру у старшого покоління.
Аналіз ринку можна поділити на чотири ключові стратегії:  
●	проникнення на ринок, стратегія з низьким рівнем ризику, спрямована на отримання додаткової частки усталеного ринку з уже наявною базою клієнтів; 
●	розробка продукту, після досягнення певного рівня насичення ринку акцент зміщується на створення нових товарів для існуючого ринку, особливо ефективно це для нішевих ринків або стимулювання активності на перенасиченому ринку; 
●	розвиток ринку, стратегія, що передбачає використання існуючих продуктів для виходу на нові ринки;
●	диверсифікація, створення абсолютно нового продукту для не освоєного ринку збуту;
●	розробка нового продукту для ринку збуту, який ще не розроблений; 
Коли справа доходить до планування власної підприємницької стратегії, матриця Ансоффа є цінним інструментом для орієнтації [2]. 
Модель враховує різні ризики та потенціал, які пропонують чотири основні комбінації продукт-ринок.  Матриця Ансоффа зображена на рис. 1.8.

 

Рисунок 1.8 – Матриця Ансоффа
(https://hub.kyivstar.ua/)

На початкових етапах створення проєкту електронної комерції важливо ретельно опрацювати та визначити всі елементи стратегії.  
Залежно від продукту та його життєвого циклу можуть бути прийняті різні стратегічні концепції.
Щоб виділитися серед конкурентів, необхідно мати унікальну торгову пропозицію (USP). Наприклад, швидка доставка – відправка всіх замовлень, отриманих до 14:00, у той же день, чи якісна підтримка клієнтів. USP потрібно визначити та повідомляти про неї постійно.    
Детальний бізнес-план важливий для оцінки капіталу для створення інтернет-магазину, а також треба врахувати витрати на вебпростір, домен, товари, склади, зображення та описи продуктів. 
Маркетинг також потребує інвестицій, і фінансова подушка має покривати витрати до появи перших замовлень.
Наступним важливим етапом є вибір рішення для створення магазину, який відповідатиме бізнес-моделі. 
Існують три основні  способи розміщення вебмагазину:
●	орендована платформа (SaaS), в якій постачальник зазвичай забезпечує хостинг, первинні налаштування, технічну підтримку та оновлення. Це готове рішення для запуску професійного магазину за короткий час,  але існують негативні сторони, це регулярні витрати, які залежать від обраного плану, наприклад орендна плата або відсоток від прибутку, обмежена функціональність та можливості кастомізації чи структури категорій;
●	рішення з власним хостингом передбачає гнучкість і можливість налаштувань на рівні коду, чого часто бракує орендованим платформам;
●	самостійно програмований магазин в якому максимальна свобода у дизайні, функціоналі та кількості продуктів, а також відсутність витрат на ліцензії чи оренду завдяки створенню магазину з нуля.
Після вибору програмного забезпечення важливо спроєктувати структуру. Категорії можна відобразити на вебсайті або в меню під логотипом. Дизайн слід адаптувати після визначення структури.
Структура інтернет-магазину має бути зрозумілою. Легко знайдені продукти та зрозуміла структура категорій допомагають клієнтам та пошуковим системам швидко орієнтуватися.
Для кращого розуміння, варто вивчити основи програмування: HTML, CSS і PHP. Магазин потрібно протестувати у автономному режимі на віртуальному сервері, щоб уникнути помилок.
Варіанти доставки та оплати є важливими критеріями при прийнятті рішення про покупку. Потрібно заздалегідь вибрати постачальників оплати та доставки і підключити їх до магазину. Деякі клієнти надають перевагу оплаті  через PayPal, інші – прямим дебетуванням. Швидка доставка та надійні логістичні партнери також важливі. Додатковим плюсом є можливість експрес-доставки.
Тут 31Dover виділяє зворотний відлік доставки на наступний день безпосередньо в заголовку свого інтернет-магазину. Чим більше варіантів ви пропонуєте, тим більше клієнтів можна обслужити теоретично. Ось чому, якщо є адаптивність у системі магазину, можна додати новий спосіб оплати або доставки пізніше.
Інтернет-комерція має свої специфічні юридичні аспекти, які не можна ігнорувати. Онлайн-продавцям важливо тримати руку на пульсі законодавчих змін та звертатися за консультацією до юриста, який спеціалізується на Інтернет-праві. Це допоможе уникнути зайвих проблем і зробити старт максимально успішним.
Створити власний онлайн-магазин непросто, особливо якщо фінансові обставини не дозволяють залишити основну роботу. У такому разі важливо ефективно використовувати вільний час для роботи над проєктом та оперативно обробляти замовлення.
Серед поширених труднощів, які зустрічаються у роботі інтернет-магазинів:
●	довге очікування на позитивне ранжування в пошукових системах через постійні зміни алгоритмів Google;
●	реальні витрати часу і грошей можуть виявитися більшими, ніж планувалося;
●	конкуренція у ніші, коли більшість товарів уже представлені на ринку.
●	динамічні зміни законодавства додають нових викликів.
Процес вибору програмного забезпечення, підготовки серверного простору та розміщення товарів зазвичай проходить швидко. Однак шлях до успіху вимагає часу та ресурсів. Ті, хто володіє необхідними знаннями і фінансовими резервами, мають більше шансів на успішну реалізацію проєкту інтернет-магазину.

1.3 Схема роботи вебсайту з продажу комп’ютерної техніки

Незалежно від того, покупка проходить в магазині чи в Інтернеті, все, що робиться, орієнтовано на транзакцію, тобто основний обмін грошей на товари чи послуги.
Якщо робити покупки в Інтернеті, це також створює дві додаткові проблеми для роздрібного продавця (або електронного продавця, як іноді називають онлайн-роздрібних продавців). Окрім певних засобів обробки трансакцій в Інтернеті, це означає, що їм також потрібен спосіб перевірити, чи дійсно замовлені товари є на складі, а також спосіб відправлення та доставки товарів на адресу покупця.
Електронна комерція – це поєднання трьох різних систем, таких як вебсервер, який може керувати вітриною інтернет-магазину та обробляти транзакції (здійснюючи відповідні посилання на банківські комп’ютери, щоб перевірити дані кредитних карток людей), систему бази даних, яка може зберігати опис товарів присутніх в магазині (постійне оновлення, коли люди роблять замовлення, і в ідеалі робити нові замовлення з постачальниками, коли запаси закінчуються), а також система відвантаження, пов’язана зі складом, де товари можна миттєво знайти та відправити покупцеві як можна швидше.
Тільки перша з цих трьох систем є строгою необхідністю для електронної комерції. Багато людей успішно керують невеликими інтернет-магазинами без складних баз даних, або систем диспетчеризації, у них просто є вебсайт, щоб оприлюднити свій бізнес і приймати замовлення, а потім вони керують контролем запасів і відправкою більш традиційними способами. 
Наприклад, дрібні торговці, які продають товари на сайті аукціону eBay, часто працюють таким чином. Бази даних «у них в голові», а диспетчерська система – це відправка товару через пошту. 
На рис. 1.9  представлена схема роботи вебсайту з продажу комп’ютерної техніки. Схема включає наступні блоки [3] :
●	блок 1 – замовлення комп’ютерної техніки онлайн, браузер взаємодіє через інтернет із вебсервером, який керує сайтом магазину;
●	блок 2 – вебсервер надсилає замовлення менеджеру до центрального комп’ютера, який відслідковує товар на кожному етапі обробки від подання до відправлення;
●	блок 3 – менеджер замовлень запитує базу даних, щоб дізнатися, чи дійсно те, що хоче клієнт, є в наявності;
●	блок 4 – якщо товару немає на складі, система бази даних може замовити нові товари у оптових продавців або виробників, це може включати зв’язок із системами замовлень у штаб-квартирі виробника, щоб дізнатися приблизний час постачання, поки клієнт все ще сидить за своїм комп’ютером (іншими словами, у «реальному часі»);
●	блок 5 – база даних про запаси підтверджує, чи є товар на складі, або пропонує приблизну дату поставки, коли поставки будуть отримані від виробника;
●	блок 6 – якщо товар є в наявності, менеджер замовлень продовжує його обробляти. Далі він спілкується з торговою системою (керованою компанією з обробки кредитних карток або пов’язаною з банком), щоб прийняти платіж за допомогою номера кредитної або дебетової картки клієнта;
●	блок 7 – торгова система може здійснювати додаткові перевірки за допомогою власного банківського комп’ютера клієнта;
●	блок 8 – банківський комп’ютер підтверджує, чи достатньо коштів у клієнта;
●	блок 9 – торгова система дозволяє продовжити транзакцію, хоча кошти будуть повністю перераховані лише через кілька днів;
●	блок 10 – менеджер замовлень підтверджує, що транзакція успішно оброблена, і повідомляє про це вебсервер;
●	блок 11 – вебсервер показує клієнту вебсторінку, яка підтверджує, що її замовлення оброблено і транзакція завершена;
●	блок 12 – менеджер замовлень надсилає на склад заявку на відправку товару клієнту;
●	блок 13 – вантажівка від диспетчерської фірми забирає товар зі складу та доставляє;
●	блок 14 – після відправлення товару складський комп’ютер надсилає клієнту електронну пошту, щоб підтвердити, що товар у дорозі:
●	блок 15 – товар доставляється замовнику.

 

Рисунок 1.9 – Схема роботи вебсайту з продажу комп’ютерної техніки.
(https://hub.kyivstar.ua/)

Усі ці речі невидимі – «віртуальні» – для клієнта, окрім комп’ютера, за яким він сидить, і диспетчерської вантажівки, яка прибуває до його дверей. 
 
2 ВИБІР І ОБҐРУНТУВАННЯ СТРУКТУРИ СИСТЕМИ


2.1 Вибір середовища програмування

В рамках цієї кваліфікаційної роботи розроблено вебсайт для продажу комп’ютерів із використанням мови програмування PHP. Вебресурси є важливим інструментом для отримання та поширення інформації, необхідної у бізнес-середовищі. 
Вебсайти функціонують як програми, що забезпечують роботу сервера та передають інформацію кінцевим користувачам через Інтернет. Для запуску вебдодатків користувачі використовують браузери, такі як Opera, Mozilla, Chrome, які відповідають за обробку та коректне відображення даних із серверів.
PHP, обрана для цього проєкту, є потужною мовою програмування сценаріїв, що застосовується для формування HTML-сторінок на серверній стороні. Вона належить до найпоширеніших мов у галузі веброзробки завдяки підтримці широким колом хостинг-провайдерів, а також відкритому коду.
Код PHP обробляється сервером і перетворюється на HTML, що передається клієнту. На відміну від сценаріїв JavaScript, код PHP залишається прихованим для кінцевого користувача, оскільки браузер отримує лише кінцевий HTML-код. Це забезпечує вищий рівень безпеки, хоча може дещо обмежувати інтерактивність вебдодатку. Разом з тим, PHP дозволяє динамічно генерувати JavaScript-код, що знімає значну частину цих обмежень.
Після отримання вихідного коду програма проходить аналіз, включаючи перевірку синтаксису, і перетворюється на внутрішній формат – байт-код, який не може бути прочитаний неозброєним оком. Байт-код оптимізує подальшу роботу з ним. Далі PHP декодує цей байт-код, діючи як перекладач.
PHP (Hypertext Preprocessor) – серверна мова програмування сценаріїв, раніше відома як Personal Home Page Tools. Вона використовується для створення HTML-сторінок на серверній сторінці і є однією з найпопулярніших мов веброзробки, поруч з Java, .NET, Perl, Python і Ruby. PHP підтримує більшість хостинг-провайдерів та є проєктом з відкритим кодом.
PHP складається з двох блоків: транслятора та інтерпретатора. Завдяки цьому аналіз вихідного коду виконується лише один раз, а виконання байт-коду стає швидким і ефективним. PHP інтерпретує вихідний код як HTML і передає клієнту. На відміну від JavaScript, PHP-код залишається невидимим для користувача, оскільки браузер отримує лише оброблений HTML. Це забезпечує безпеку, але може обмежувати інтерактивність сайту. Водночас PHP може генерувати JavaScript-код, який браузер потім виконує [14].
Серверні сценарії, такі як PHP, дозволяють створювати динамічний контент, який адаптується до потреб користувачів або змінюється з часом, стимулюючи відвідувачів повертатися на сайт. PHP працює як складова вебсервера, що забезпечує простоту написання та читання коду. На відміну від Perl, PHP-код легко зрозуміти.
Мова PHP можна вбудовувати прямо в HTML-код сторінки, після чого PHP починає виконувати код між спеціальними тегами розблокування (`<?php`) та блокування (`?>`). PHP пропонує широкий набір функцій, що спрощує роботу без необхідності створювати багаторядкові функції.
PHP підтримує роботу з різними базами даних, включаючи MySQL, PostgreSQL, Oracle, Sybase та інші. Завдяки стандарту ODBC можна підключатися до будь-якої бази даних, де доступний відповідний драйвер.
PHP має багато знайомих рис для програмістів з різних галузей, оскільки його синтаксис запозичень з мов C та Perl. Код PHP нагадує типові програми, написані на C або Pascal, що спрощує його освоєння для новачків. PHP поєднує переваги мов Perl і C, при цьому його універсальний та зрозумілий синтаксис був спеціально адаптований для використання в Інтернеті. Незважаючи на свій відносно молодий вік, PHP швидко завоював популярність серед веброзробників і сьогодні вважається одним з найвідоміших мов для створення вебдодатків.
Відкритість PHP, як проєкту з відкритим кодом та безкоштовний доступ до вихідного коду суттєво вплинули на розвиток подібних ініціатив, таких як Linux. 
Проєкти, наприклад, Apache, сприяли зміцненню позицій Open Source та підтримували розвиток PHP завдяки внескам користувачів з усього світу. Участь спільноти стала значним чинником у вдосконаленні PHP [5].
Безкоштовне поширення вихідного коду PHP та колективна підтримка користувачів по всьому світу створюють корисну базу для вирішення складних запитів. Активні електронні обговорення допомагають знаходити відповіді навіть на найважчі питання.
Ефективність є важливим перевагою PHP, особливо для роботи в Інтернеті. Порівняно з іншими мовами, такими як Perl, PHP забезпечує швидке виконання сценаріїв. Навіть якщо компільовані програми працюють швидше за інтерпретовані, швидкодія PHP достатня для створення складних вебдодатків.
PHP-скрипти формуються у вигляді кодових блоків, які можна інтегрувати до HTML-коду, розділяючи їх спеціальними символами. Код PHP у HTML відкривається тегом `<?php` і закривається тегом `?>`. Альтернативно, він може розташовуватися між `<script language="php">` та `</script>`. Найкращим вибором є використання тегів `<?php ?>`, оскільки вони забезпечують сумісність PHP-коду з XML-документами. Можна також використовувати короткий формат <? ?>`, увімкнувши змінну `short_open_tag` у файлі php.ini. Стиль ASP (`<%%>`) також можливий, але його використання не рекомендоване, і ця функція буде вилучена у PHP6.
PHP виконує код між відповідними розділовими символами, наприклад `<?php ?>`. Все, що знаходиться за межами цих символів, залишається незмінним і включає HTML-код.
PHP дозволяє використовувати однорядкові та багаторядкові коментарі. Однорядкові коментарі починаються з `//` або `#`, як у сценаріях UNIX.
Багаторядкові коментарі обрамляються символами `/*` і `*/`. Коментарі в рядках діють до завершення цієї рядки або до закривального тега `?>`.
Змінні є основою будь-якого програмування. PHP, як і деякі інші мови сценаріїв UNICS, описувати не потрібно. У PHP є три стилі змінних:
Інструкції в PHP зазвичай не вимагають крапки з комою перед закривальним тегом сценарію (`?>`).
Короткий стиль передбачає, що змінні записуються як: $ змінна. Він використовується в більшості випадків. Змінна, створена програмним кодом, записується так. Якщо у файлі конфігурації php.ini увімкнено register_globals, цей стиль також можна використовувати для видалення змінної з FORM.
Середній стиль описується, як $ _POST ['змінна'], $ _ GET ['змінна'], $ _REKUEST ['змінна']. Використовується для отримання інформації з поля ФОРМА. Залежно від типу передачі даних для обох випадків призначаються POST, GET або REQUEST. Ці змінні також називають глобальними.
Довгий  стиль має свою особливість та  подається  за допомогою  наступного  запису $ HTTP_POST_VARS ['змінні'], $ HTTP_GET_VARS ['змінна'] Найповніший стиль запису та найменше використовуваний. Починаючи з PHP 5.0.0, ці змінні можна вимкнути. Починаючи з PHP 6, ці змінні не існують. Не рекомендується використовувати цей тип змінної для кращої сумісності з майбутніми версіями PHP [9].
Приклад запису змінної з десятковим дробом і рядковою змінною: $ змінна = 0,00; $ variable1 = 'Привіт, PHP Master!'; $ variable2 = "Привіт, теги PHP!"
PHP пропонує широкий спектр функцій для пошуку та модифікації тексту в рядках, використовуючи як класичні методи, так і спеціальні технології на основі регулярних виразів. Мова підтримує два типи регулярних виразів: сумісні з Perl та сумісні з POSIX, які відрізняються своїм синтаксисом та функціональними можливостями.
Як динамічна мова програмування, PHP не вимагає явного визначення типу змінної, хоча така опція доступна. Компілятор PHP визначає тип змінної на основі контексту. У разі потреби можна явно задавати тип змінної через відповідні мовні конструкції. Це корисно для уникнення неоднозначностей у тлумаченні значення змінної залежно від її типу. Також можна змінювати тип змінної на будь-якому етапі. Назви змінних у PHP чутливі до реєстру.
Основними типами даних у PHP є логічні значення, цілі числа, числа з плаваючою комою та рядки. Логічні значення використовуються для представлення істинності чи хибності. 
Цілі числа можуть бути подані в десятковій, вісімковій чи шістнадцятковій системах, їх розмір залежить від платформи і зазвичай складає 32 біти. PHP не підтримує немарковані цілі числа. Числа з плаваючою комою можуть бути записані у десятковій чи експоненційній формі. Додатково, для кожної змінної можна визначити свій тип даних. 
Рядки поділяються  на дві категорії, ті, що піддаються аналізу, і ті, які ні. У першій категорії компілятор перевіряє, чи посилаються на інші змінні, та при необхідності підставляє їх значення. Також за допомогою відповідного посібника можна змінювати оцінки. 
Символ рядка може приймати одне з 256 значень, однак підтримується робота з багатобайтовими символами. Доступ до символів здійснюється через синтаксис, подібний до звернення до елементів масиву, наприклад, змішані типи включають рядки, хештеги та об’єкти. 
З лінгвістичної точки зору, рядки є сукупністю змінних, які можуть змінюватися самостійно. Масиві не потребують попереднього резервування місця. По суті, масиви – це карти, що асоціюють ключові значення з позиціями змінних. Значення, закріплене за ключем, може бути будь-яким даним, поданим як змінна. Обмеження щодо кількості ключів визначаються лише обсягом пам’яті.
Особливість мови полягає у відсутності рівномірного розподілу рядків. Модель багатовимірного масиву реалізована без явного обмеження на глибину вкладення. PHP має корисну можливість зв’язувати рядки з функціями зворотного виклику, які дозволяють маніпулювати одним чи кількома полями у пакетному режимі. Крім того, PHP пропонує розширені функції для роботи з масивами. Є два спеціальні типи даних, такі як резерв і NULL. 
NULL – це показник, що вказує на відсутність значення. У різних мовах програмування вин представлений специфічними константами. 
Резерв – це змінна, що містить посилання на зовнішні ресурси, які використовуються для виконання специфічних завдань, а саме відкриття файлів або їх обертання. Діяльність зі значеннями ресурсів не має сенсу.
Область дії змінної передбачає простір, у якому вона була створена. Змінні можуть бути локальними чи глобальними. Усі змінні за замовчуванням є локальними. Статичні змінні дозволяють повторно активувати значення в певному кодовому сегменті, при цьому зберігається їхнє початкове значення.
Суперглобальні змінні використовуються для зберігання зовнішніх даних чи інформації про довкілля. Система підтримує роботу з динамічними змінними та функціями.
Константи в PHP – це фіксовані значення, які після оголошення не можуть бути змінені чи видалені. Їхні значення обов’язково є скалярними.
Константи дозволяють отримувати свої значення через динамічні імена. Діапазон дії констант є глобальним для всього сценарію та його компонентів. У ядрі мови вже визначено багато системних констант. Оператори забезпечують виконання дій із операндами. Вони мають порядок виконання і пріоритет, як і в інших мовах. 
Особливість порівняння у PHP – це здатність розрізняти дані двох категорій, незалежно від їхнього типу, та приводити їх до єдиного типу за потреби. PHP реалізує класи операторів для оптимізації продуктивності, обробки помилок та управління класами.
Функції посилань дозволяють створювати необмежену кількість імен, пов’язаних з одними даними. При зміні імені дані залишаються в пам'яті до завершення сценарію або видалення всіх посилань. З функціональної точки зору функції є контейнерами для коду, що може містити інші функції та класи.
Вони можуть бути умовно визначені, що потребує попереднього оголошення викликаної функції, хоча це не є обов’язковим в інших ситуаціях. Функцію неможливо змінити чи деактивувати. Тип результату, що повертає функція, може бути будь-яким.
У PHP, замість перевантаження функцій, яке поширене у багатьох мовах програмування, використовується метод динамічних аргументів. Це дозволяє адаптувати виконання функції залежно від типу та розміру переданих параметрів. 
Метод не визначає фіксовану кількість параметрів під час оголошення функції, але забезпечує можливість обробки аргументів, отриманих під час виклику. 
Основний код функції може враховувати кількість надісланих аргументів та виконувати відповідні модифікації. 
Для аргументів можна визначити значення за замовчуванням у процесі оголошення функції. Хоча функція повертає лише одне значення, це обмеження можна обійти за допомогою рядків або посилань. Однак аргументи посилань не можуть бути передані під час виконання функції чи команди.
Коли сценарії виконуються, зайнята ними пам’ять очищається через механізм збирача сміття. При цьому, якщо потрібно, можна керувати пам'яттю для видалення лишніх сегментів даних під час виконання сценарію, хоча застосування функції очищення не є ефективним.
PHP підтримує роботу з файлами cookie HTTP відповідно до специфікації Netscape, що забезпечує можливість запису та зчитування невеликих обсягів інформації про клієнтів. 
Модульний підхід дозволяє розрізняти різні коди для створення програмних пакетів, а підключення необхідних модулів може бути умовним.
 Файли, які додаються до сценарію, мають можливість повертати значення. 
Крім того, PHP дозволяє організовувати роботу користувачів у межах сесій, зберігаючи різноманітні дані, включаючи об’єкти.
Слабкі сторони PHP полягають в наступному:
●	складний синтаксис;
●	використання змінної із символом «$»;
●	типові назви функцій (html_entity_decode, mysql_select_bd, nl2br);
●	відсутність підтримки Unicode у версіях до 6.0;
●	непередбачуваність у поведінці нових версій PHP.
Переваги мови C/Perl, які можна виділити:
●	масштабованість, що дозволяє створювати програми для різних платформ та систем;
●	робота з низькорівневою пам’яттю, адресами та портами;
●	можливість генерування різних типів даних, їхньої спеціалізації та алгоритмів за допомогою моделей;
●	підтримка різних стилів програмування, традиційне, PPE, загального призначення та метапрограмування [8].
Якщо розглядати недоліки мови C/Perl серед них виділяють наступні:
●	наявність функцій, що можуть порушувати політику безпеки, що іноді призводить до критичних помилок;
●	незадовільна підтримка модулів, прив’язка зовнішнього модуля через заголовок препроцесора (#include) значно уповільнює компіляцію за умов використання кількох модулів;
●	відсутність перевірки типів даних під час компіляції;
●	складність у вивченні та компіляції;
●	некоректність у роботі з певними типами перетворень, наприклад, операції з непідписаними числами можуть давати некоректні результати.
Враховуючи всі переваги та недоліки розглянутих мов програмування, PHP було обрано як основну мову системного програмування.

